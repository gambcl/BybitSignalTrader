//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/cogamble/Projects/Personal/SignalTrader/SignalTrader/Signals/SignalScript/SignalScript.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SignalTrader.Signals.SignalScript.Generated {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISignalScriptListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SignalScriptBaseListener : ISignalScriptListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SignalScriptParser.signal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignal([NotNull] SignalScriptParser.SignalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SignalScriptParser.signal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignal([NotNull] SignalScriptParser.SignalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SignalScriptParser.signalblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignalblock([NotNull] SignalScriptParser.SignalblockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SignalScriptParser.signalblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignalblock([NotNull] SignalScriptParser.SignalblockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SignalScriptParser.account"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccount([NotNull] SignalScriptParser.AccountContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SignalScriptParser.account"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccount([NotNull] SignalScriptParser.AccountContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SignalScriptParser.funclist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunclist([NotNull] SignalScriptParser.FunclistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SignalScriptParser.funclist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunclist([NotNull] SignalScriptParser.FunclistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SignalScriptParser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc([NotNull] SignalScriptParser.FuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SignalScriptParser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc([NotNull] SignalScriptParser.FuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SignalScriptParser.namedparamlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedparamlist([NotNull] SignalScriptParser.NamedparamlistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SignalScriptParser.namedparamlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedparamlist([NotNull] SignalScriptParser.NamedparamlistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SignalScriptParser.namedparam"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedparam([NotNull] SignalScriptParser.NamedparamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SignalScriptParser.namedparam"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedparam([NotNull] SignalScriptParser.NamedparamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringParamValue([NotNull] SignalScriptParser.StringParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringParamValue([NotNull] SignalScriptParser.StringParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanParamValue([NotNull] SignalScriptParser.BooleanParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanParamValue([NotNull] SignalScriptParser.BooleanParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>sideParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSideParamValue([NotNull] SignalScriptParser.SideParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sideParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSideParamValue([NotNull] SignalScriptParser.SideParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>directionParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirectionParamValue([NotNull] SignalScriptParser.DirectionParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>directionParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirectionParamValue([NotNull] SignalScriptParser.DirectionParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>priceParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPriceParamValue([NotNull] SignalScriptParser.PriceParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>priceParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPriceParamValue([NotNull] SignalScriptParser.PriceParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>orderParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderParamValue([NotNull] SignalScriptParser.OrderParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>orderParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderParamValue([NotNull] SignalScriptParser.OrderParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>leverageParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeverageParamValue([NotNull] SignalScriptParser.LeverageParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>leverageParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeverageParamValue([NotNull] SignalScriptParser.LeverageParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierParamValue([NotNull] SignalScriptParser.IdentifierParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierParamValue([NotNull] SignalScriptParser.IdentifierParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>floatParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatParamValue([NotNull] SignalScriptParser.FloatParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>floatParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatParamValue([NotNull] SignalScriptParser.FloatParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>floatPercentParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatPercentParamValue([NotNull] SignalScriptParser.FloatPercentParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>floatPercentParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatPercentParamValue([NotNull] SignalScriptParser.FloatPercentParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntParamValue([NotNull] SignalScriptParser.IntParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntParamValue([NotNull] SignalScriptParser.IntParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intPercentParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntPercentParamValue([NotNull] SignalScriptParser.IntPercentParamValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intPercentParamValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.paramvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntPercentParamValue([NotNull] SignalScriptParser.IntPercentParamValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>trueValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrueValue([NotNull] SignalScriptParser.TrueValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>trueValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrueValue([NotNull] SignalScriptParser.TrueValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>falseValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFalseValue([NotNull] SignalScriptParser.FalseValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>falseValue</c>
	/// labeled alternative in <see cref="SignalScriptParser.boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFalseValue([NotNull] SignalScriptParser.FalseValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>buySide</c>
	/// labeled alternative in <see cref="SignalScriptParser.side"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBuySide([NotNull] SignalScriptParser.BuySideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>buySide</c>
	/// labeled alternative in <see cref="SignalScriptParser.side"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBuySide([NotNull] SignalScriptParser.BuySideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>sellSide</c>
	/// labeled alternative in <see cref="SignalScriptParser.side"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSellSide([NotNull] SignalScriptParser.SellSideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sellSide</c>
	/// labeled alternative in <see cref="SignalScriptParser.side"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSellSide([NotNull] SignalScriptParser.SellSideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>longDirection</c>
	/// labeled alternative in <see cref="SignalScriptParser.direction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLongDirection([NotNull] SignalScriptParser.LongDirectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>longDirection</c>
	/// labeled alternative in <see cref="SignalScriptParser.direction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLongDirection([NotNull] SignalScriptParser.LongDirectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>shortDirection</c>
	/// labeled alternative in <see cref="SignalScriptParser.direction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShortDirection([NotNull] SignalScriptParser.ShortDirectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>shortDirection</c>
	/// labeled alternative in <see cref="SignalScriptParser.direction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShortDirection([NotNull] SignalScriptParser.ShortDirectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bidPrice</c>
	/// labeled alternative in <see cref="SignalScriptParser.price"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBidPrice([NotNull] SignalScriptParser.BidPriceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bidPrice</c>
	/// labeled alternative in <see cref="SignalScriptParser.price"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBidPrice([NotNull] SignalScriptParser.BidPriceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>askPrice</c>
	/// labeled alternative in <see cref="SignalScriptParser.price"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAskPrice([NotNull] SignalScriptParser.AskPriceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>askPrice</c>
	/// labeled alternative in <see cref="SignalScriptParser.price"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAskPrice([NotNull] SignalScriptParser.AskPriceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lastPrice</c>
	/// labeled alternative in <see cref="SignalScriptParser.price"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLastPrice([NotNull] SignalScriptParser.LastPriceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lastPrice</c>
	/// labeled alternative in <see cref="SignalScriptParser.price"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLastPrice([NotNull] SignalScriptParser.LastPriceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>marketOrder</c>
	/// labeled alternative in <see cref="SignalScriptParser.order"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMarketOrder([NotNull] SignalScriptParser.MarketOrderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>marketOrder</c>
	/// labeled alternative in <see cref="SignalScriptParser.order"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMarketOrder([NotNull] SignalScriptParser.MarketOrderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>limitOrder</c>
	/// labeled alternative in <see cref="SignalScriptParser.order"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLimitOrder([NotNull] SignalScriptParser.LimitOrderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>limitOrder</c>
	/// labeled alternative in <see cref="SignalScriptParser.order"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLimitOrder([NotNull] SignalScriptParser.LimitOrderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>crossLeverage</c>
	/// labeled alternative in <see cref="SignalScriptParser.leverage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCrossLeverage([NotNull] SignalScriptParser.CrossLeverageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>crossLeverage</c>
	/// labeled alternative in <see cref="SignalScriptParser.leverage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCrossLeverage([NotNull] SignalScriptParser.CrossLeverageContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>isolatedLeverage</c>
	/// labeled alternative in <see cref="SignalScriptParser.leverage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsolatedLeverage([NotNull] SignalScriptParser.IsolatedLeverageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>isolatedLeverage</c>
	/// labeled alternative in <see cref="SignalScriptParser.leverage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsolatedLeverage([NotNull] SignalScriptParser.IsolatedLeverageContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace SignalTrader.Signals.SignalScript.Generated
